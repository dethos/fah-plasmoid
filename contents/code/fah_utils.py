from telnetlib import Telnet
from json import loads

'''
Collection of functions that comunicate with f@h client
running on local machine
'''


# Useful functions
def simulation_info(id):
    '''
    Returns the information about the simulation
    specified in the first parameter. (must be an Integer)
    '''
    try:
        int(id)
    except:
        raise TypeError("Id must be an Integer")

    delimiter = '>'.encode('utf-8')
    command = ("simulation-info %s\n" % id).encode('utf-8')

    connection = Telnet('127.0.0.1', 36330)
    connection.read_until(delimiter)
    connection.write(command)
    wu_data = connection.read_until(delimiter)
    connection.close()

    return parse_simulation_response(wu_data)


def current_simulation():
    '''
    Same as simulation_info, but returns the current WU information
    '''
    return simulation_info(0)


# Auxiliary functions

def parse_simulation_response(data):
    '''
    Transforms the received byte array into useful python dictionary
    '''
    data_string = data.decode('utf-8')
    usefull_data = data_string.split('\n')[1]
    # The Output generated by F@H Client is using PyOn Notation.
    # Given the absense of module in the standard library and the
    # compatible output generated in this context, JSON library is used
    return loads(usefull_data)

# Used for development purposes only
if __name__ == '__main__':
    print(type(current_simulation()))
